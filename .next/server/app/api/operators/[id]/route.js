"use strict";(()=>{var e={};e.id=156,e.ids=[156],e.modules={8013:e=>{e.exports=require("mongodb")},2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4978:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>w,patchFetch:()=>I,requestAsyncStorage:()=>x,routeModule:()=>f,serverHooks:()=>j,staticGenerationAsyncStorage:()=>g});var o={};r.r(o),r.d(o,{DELETE:()=>m,GET:()=>l,PUT:()=>c});var a=r(9303),s=r(8716),n=r(670),i=r(7070),d=r(4184),p=r(8013),u=r(1615);async function l(e,{params:t}){try{let r;let o=(0,u.cookies)(),a=o.get("asan_user_role")?.value,s=o.get("asan_user_id")?.value;if("admin"!==a)return i.NextResponse.json({error:"Unauthorized access"},{status:403});let n=(await d.Z).db(),l=n.collection("staff");try{r=new p.ObjectId(t.id)}catch(e){return i.NextResponse.json({error:"Invalid operator ID format"},{status:400})}let c=await l.findOne({_id:r,role:"operator"});if(!c)return i.NextResponse.json({error:"Operator not found"},{status:404});await n.collection("auditLogs").insertOne({action:"operator_details_access",userId:s,userRole:a,accessedOperatorId:t.id,timestamp:new Date,ipAddress:e.headers.get("x-forwarded-for")||"unknown"});let{password:m,...f}=c;return i.NextResponse.json({id:f._id.toString(),operatorId:f.operatorId,name:f.name,email:f.email,phone:f.phone||"",location:f.location||"",status:f.status||"active",role:f.operatorRole||"Operator",permissions:f.permissions||[],joinDate:f.joinDate||new Date().toISOString().split("T")[0],lastLogin:f.lastLogin||null})}catch(e){return console.error("Fetch operator error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function c(e,{params:t}){try{let r;let o=(0,u.cookies)(),a=o.get("asan_user_role")?.value,s=o.get("asan_user_id")?.value;if("admin"!==a)return i.NextResponse.json({error:"Unauthorized access"},{status:403});let{password:n,role:l,_id:c,...m}=await e.json(),f=(await d.Z).db(),x=f.collection("staff");try{r=new p.ObjectId(t.id)}catch(e){return i.NextResponse.json({error:"Invalid operator ID format"},{status:400})}if(!await x.findOne({_id:r,role:"operator"}))return i.NextResponse.json({error:"Operator not found"},{status:404});if(m.email||m.operatorId){let e={role:"operator",_id:{$ne:r}};if(m.email&&(e.email=m.email),m.operatorId&&(e.operatorId=m.operatorId),await x.findOne(e))return i.NextResponse.json({error:"An operator with this ID or email already exists"},{status:409})}let g=await x.updateOne({_id:r},{$set:{...m,updatedAt:new Date}});if(0===g.modifiedCount)return i.NextResponse.json({error:"No changes made"},{status:400});return await f.collection("auditLogs").insertOne({action:"update_operator",performedBy:s,userRole:a,targetId:r.toString(),details:{updates:Object.keys(m)},timestamp:new Date,ipAddress:e.headers.get("x-forwarded-for")||"unknown"}),i.NextResponse.json({message:"Operator updated successfully"})}catch(e){return console.error("Update operator error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function m(e,{params:t}){try{let r;let o=(0,u.cookies)(),a=o.get("asan_user_role")?.value,s=o.get("asan_user_id")?.value;if("admin"!==a)return i.NextResponse.json({error:"Unauthorized access"},{status:403});let n=(await d.Z).db(),l=n.collection("staff");try{r=new p.ObjectId(t.id)}catch(e){return i.NextResponse.json({error:"Invalid operator ID format"},{status:400})}let c=await l.findOne({_id:r,role:"operator"});if(!c)return i.NextResponse.json({error:"Operator not found"},{status:404});let m=await l.deleteOne({_id:r});if(0===m.deletedCount)return i.NextResponse.json({error:"Failed to delete operator"},{status:500});return await n.collection("auditLogs").insertOne({action:"delete_operator",performedBy:s,userRole:a,targetId:r.toString(),details:{operatorId:c.operatorId,name:c.name,email:c.email},timestamp:new Date,ipAddress:e.headers.get("x-forwarded-for")||"unknown"}),i.NextResponse.json({message:"Operator deleted successfully"})}catch(e){return console.error("Delete operator error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let f=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/operators/[id]/route",pathname:"/api/operators/[id]",filename:"route",bundlePath:"app/api/operators/[id]/route"},resolvedPagePath:"C:\\Users\\NITISH SINGHA\\Desktop\\project8\\app\\api\\operators\\[id]\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:x,staticGenerationAsyncStorage:g,serverHooks:j}=f,w="/api/operators/[id]/route";function I(){return(0,n.patchFetch)({serverHooks:j,staticGenerationAsyncStorage:g})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[276,972,535],()=>r(4978));module.exports=o})();