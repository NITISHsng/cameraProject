"use strict";(()=>{var e={};e.id=740,e.ids=[740],e.modules={8013:e=>{e.exports=require("mongodb")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8996:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>f,patchFetch:()=>w,requestAsyncStorage:()=>p,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var o={};t.r(o),t.d(o,{POST:()=>l});var n=t(9303),s=t(8716),a=t(670),i=t(7070),u=t(4184);let d=require("bcrypt");async function l(e){try{if(!e.body)return i.NextResponse.json({error:"Missing request body"},{status:400});let{userType:r,userId:t,operatorId:o,password:n}=await e.json();if(!n)return i.NextResponse.json({error:"Password required"},{status:400});if("admin"!==r&&"operator"!==r)return i.NextResponse.json({error:"Invalid user type"},{status:400});if("admin"===r&&!t)return i.NextResponse.json({error:"Admin user ID required"},{status:400});if("operator"===r&&!o)return i.NextResponse.json({error:"Operator ID required"},{status:400});if(!await (0,u.y)())return console.error("MongoDB connection failed"),i.NextResponse.json({error:"Database connection error"},{status:500});let s=(await u.Z).db(),a=s.collection("staff"),l=null;if(!(l="admin"===r?await a.findOne({userId:t,role:"admin"}):await a.findOne({operatorId:o,role:"operator"})))return i.NextResponse.json({error:"User not found"},{status:401});if("inactive"===l.status)return i.NextResponse.json({error:"Account is inactive"},{status:403});let c=!1;try{if(l.password&&l.password.startsWith("$2"))c=await (0,d.compare)(n,l.password);else if(c=l.password===n)try{let e=await (0,d.hash)(n,10);await a.updateOne({_id:l._id},{$set:{password:e}}),console.log(`Password hashed for user: ${l._id}`)}catch(e){console.error("Password hashing error:",e)}}catch(e){return console.error("Password verification error:",e),i.NextResponse.json({error:"Authentication error"},{status:500})}if(!c)return await s.collection("auditLogs").insertOne({action:"failed_login",userType:r,userId:"admin"===r?t:o,timestamp:new Date,ipAddress:e.headers.get("x-forwarded-for")||"unknown"}),i.NextResponse.json({error:"Invalid password"},{status:401});await a.updateOne({_id:l._id},{$set:{lastLogin:new Date}}),await s.collection("auditLogs").insertOne({action:"successful_login",userType:r,userId:l._id.toString(),timestamp:new Date,ipAddress:e.headers.get("x-forwarded-for")||"unknown"});let p=i.NextResponse.json({id:l._id.toString(),name:l.name,email:l.email,role:l.role,status:l.status||"active"});return p.cookies.set({name:"asan_user_id",value:l._id.toString(),httpOnly:!0,secure:!0,maxAge:604800,path:"/"}),p.cookies.set({name:"asan_user_role",value:l.role,httpOnly:!0,secure:!0,maxAge:604800,path:"/"}),p}catch(e){return console.error("Login error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let c=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/login/route",pathname:"/api/login",filename:"route",bundlePath:"app/api/login/route"},resolvedPagePath:"C:\\Users\\NITISH SINGHA\\Desktop\\project8\\app\\api\\login\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:p,staticGenerationAsyncStorage:g,serverHooks:m}=c,f="/api/login/route";function w(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},4184:(e,r,t)=>{let o,n;t.d(r,{Z:()=>u,y:()=>i});var s=t(8013);if(!process.env.MONGODB_URI)throw Error("Please define the MONGODB_URI environment variable");let a=process.env.MONGODB_URI;async function i(){try{let e=await n;return await e.db().command({ping:1}),!0}catch(e){return console.error("MongoDB connection verification failed:",e),!1}}global._mongoClientPromise||(o=new s.MongoClient(a),global._mongoClientPromise=o.connect().catch(e=>{throw console.error("Failed to connect to MongoDB:",e),e}));let u=n=global._mongoClientPromise}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[276,972],()=>t(8996));module.exports=o})();