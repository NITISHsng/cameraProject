"use strict";(()=>{var e={};e.id=740,e.ids=[740],e.modules={8013:e=>{e.exports=require("mongodb")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},612:(e,r,o)=>{o.r(r),o.d(r,{originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>m,staticGenerationAsyncStorage:()=>c});var t={};o.r(t),o.d(t,{POST:()=>p});var n=o(9303),s=o(8716),a=o(670),i=o(7070),l=o(4184);async function p(e){try{let{userType:r,userId:o,operatorId:t,password:n}=await e.json();if(!n)return i.NextResponse.json({error:"Password required"},{status:400});let s=(await l.Z).db().collection("staff"),a=null;if(!(a="admin"===r?await s.findOne({userId:o,role:"admin"}):await s.findOne({operatorId:t,role:"operator"})))return i.NextResponse.json({error:"User not found"},{status:401});if(a.password!==n)return i.NextResponse.json({error:"Invalid password"},{status:401});return i.NextResponse.json({id:a._id,name:a.name,email:a.email,role:a.role})}catch(e){return console.error("Login error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let u=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/login/route",pathname:"/api/login",filename:"route",bundlePath:"app/api/login/route"},resolvedPagePath:"C:\\Users\\NITISH SINGHA\\Desktop\\project8\\app\\api\\login\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:m}=u,g="/api/login/route";function x(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:c})}},4184:(e,r,o)=>{let t;o.d(r,{Z:()=>a});var n=o(8013);let s=process.env.MONGODB_URI;global._mongoClientPromise||(t=new n.MongoClient(s),global._mongoClientPromise=t.connect());let a=global._mongoClientPromise}};var r=require("../../../webpack-runtime.js");r.C(e);var o=e=>r(r.s=e),t=r.X(0,[276,972],()=>o(612));module.exports=t})();